@charset "UTF-8";

.bultext {
  font: 400 1.4rem/115% "Calibri";
  color: var(--color-text);
  padding-left: 1.3rem;
  margin-bottom: 1.8rem;
  position: relative;
}

.bultext::before {
  content: "";
  width: 0.6rem;
  height: 0.6rem;
  border-radius: 50%;
  background: var(--color-accent);
  position: absolute;
  top: 0.5rem;
  left: 0;
}

@font-face {
  font-family: "Calibri";
  src: url("../fonts/Calibri-Bold.eot");
  src: local("Calibri Bold"), local("Calibri-Bold"), url("../fonts/Calibri-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Calibri-Bold.woff2") format("woff2"), url("../fonts/Calibri-Bold.woff") format("woff"), url("../fonts/Calibri-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: "Calibri";
  src: url("../fonts/Calibri.eot");
  src: local("Calibri"), url("../fonts/Calibri.eot?#iefix") format("embedded-opentype"), url("../fonts/Calibri.woff2") format("woff2"), url("../fonts/Calibri.woff") format("woff"), url("../fonts/Calibri.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

.footer {
  padding-top: 4.1rem;
  padding-bottom: 4rem;
  background: #FFFFFF;
  box-shadow: 0 -9px 17px 0 rgba(0, 0, 0, 0.1);
}

.footer__logo img {
  width: 17rem;
}

.footer__menu {
  display: flex;
}

.footer__menu-1 {
  width: 100%;
  max-width: 26%;
  margin-right: 3rem;
}

.footer__menu-2 {
  width: 100%;
  display: grid;
  grid-template: repeat(3, 1.7rem)/1fr 1fr 2fr;
  gap: 3.2rem 3rem;
  grid-auto-flow: column;
}

.footer__menu-1 a:not(:last-child) {
  margin-bottom: 3.2rem;
}

.footer__menu-2 a:not(:last-child) {
  margin-bottom: 3.2rem;
}

.footer__menu-1-item,
.footer__menu-2-item {
  font: 400 1.6rem/115% "Calibri";
  display: block;
  color: var(--color-text);
  transition: color 0.2s ease-in-out;
}

.footer__menu-1-item:hover,
.footer__menu-2-item:hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

.footer__info {
  padding-left: 5%;
}

.footer__info-item {
  font: 400 1.4rem/115% "Calibri";
  display: block;
  color: var(--color-text);
}

.footer__info-item:not(:last-child) {
  margin-bottom: 2.1rem;
}

a.footer__info-item {
  color: var(--color-text);
  transition: color 0.2s ease-in-out;
}

a.footer__info-item:hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

@media (max-width: 100em) {
  .footer__info {
    padding-left: 3%;
  }
}

@media (max-width: 87.5em) {
  .footer__info {
    padding-left: 1%;
  }

  .footer__logo img {
    width: 85%;
  }
}

@media (max-width: 75em) {
  .footer {
    padding-bottom: 13rem;
  }

  .footer__info {
    padding-left: 0;
    display: flex;
    justify-content: space-between;
    position: absolute;
    top: 22.2rem;
    right: 0;
  }
}

@media (max-width: 62em) {
  .footer__info {
    top: 20.8rem;
    right: 0;
  }

  .footer__menu-2 {
    grid-template: repeat(3, 1.7rem)/1fr 1fr 1fr;
    gap: 3.2rem 3rem;
    grid-auto-flow: column;
  }

  .footer__menu-2 a:last-child {
    margin-top: 3.8rem;
  }
}

@media (max-width: 48em) {
  .footer {
    padding-bottom: 21rem;
  }

  .footer__info {
    top: 31rem;
    right: 0;
    flex-wrap: wrap;
  }

  .footer__info-item {
    padding-right: 1.7rem;
  }
}

@media (max-width: 40em) {
  .footer {
    padding-top: 2.1rem;
    padding-bottom: 8rem;
  }

  .footer__logo {
    width: 100% !important;
    text-align: center;
    margin-bottom: 7.8rem;
  }

  .footer__logo img {
    width: 17.3rem;
  }

  .footer__menu {
    width: 100% !important;
  }

  .footer__menu-1 {
    display: none;
  }

  .footer__menu-2 {
    display: block;
    text-align: center;
  }

  .footer__menu-2-item {
    margin-top: 0;
    margin-bottom: 2.4rem;
  }

  .footer__menu-2 a:last-child {
    margin-top: 0;
  }

  .footer__menu-2 a:not(:last-child) {
    margin-bottom: 2.4rem;
  }

  .footer__info {
    width: 100% !important;
    position: relative;
    top: -4rem;
    left: 50%;
    transform: translate(-50%, 0);
    display: block;
    text-align: center;
  }

  .footer__info-item {
    padding-right: 0;
  }

  .footer__info-item:last-child {
    font-weight: 700;
    font-size: 2.4rem;
    line-height: 115%;
    font-family: "Calibri";
  }

  .footer__menu-2-item:not(:nth-child(8),
  :nth-child(9)) {
    display: none;
  }
}

.header {
  background: #FFFFFF;
  box-shadow: 0 4px 26px 0 rgba(0, 0, 0, 0.09);
  position: absolute;
  z-index: 1;
  width: 100%;
  top: 0;
  left: 0;
  padding-top: 0.7rem;
  padding-bottom: 0.9rem;
}

.header__upper {
  align-items: center;
}

.header__logo img {
  width: 9.1rem;
}

.header__nav {
  width: 100%;
  display: grid;
  grid-template: 1fr/3fr 1fr 1fr 2fr 1fr;
  column-gap: 3rem;
  align-items: center;
}

.header__nav-item {
  font: 400 1.4rem/115% "Calibri";
  display: block;
  color: var(--color-gray);
}

.header__nav-item:first-child {
  text-align: right;
  padding-right: 5.5rem;
}

.header__nav-item {
  font: 400 1.4rem/115% "Calibri";
  color: var(--color-gray);
  transition: color 0.2s ease-in-out;
}

.header__nav-item:not(:first-child):hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

.header__burger-menu {
  display: none;
  padding-bottom: 4.1rem;
}

.header__mainmenu {
  padding-top: 3.1rem;
  padding-bottom: 3.1rem;
}

.header__mainmenu-item {
  font: 400 2rem/115% "Calibri";
  display: block;
  color: var(--color-gray);
  transition: color 0.2s ease-in-out;
}

.header__mainmenu-item:hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

.header__mainmenu-item:not(:last-child) {
  margin-bottom: 4.8rem;
}

.header__allshops {
  padding-left: 14.9rem;
  border-left: 0.2rem solid #C4C4C4;
}

.header__titlemenu {
  font: 700 2.4rem/115% "Calibri";
  color: var(--color-text);
  padding-top: 3.1rem;
  margin-bottom: 3.4rem;
}

.header__doblemenu {
  display: grid;
  grid-template: repeat(8, 1.7rem)/repeat(auto-fit, minmax(18rem, 1fr));
  gap: 3.8rem 3rem;
  grid-auto-flow: column;
}

.header__menu-item {
  font: 400 1.6rem/115% "Calibri";
  display: block;
  color: var(--color-text);
  transition: color 0.2s ease-in-out;
}

.header__menu-item:hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

.header__menu a:not(:last-child) {
  margin-bottom: 3.8rem;
}

.header__burger-btn {
  background: #ffffff;
  width: 100%;
  height: 100%;
  position: relative;
}

.header__burger-btn::before {
  content: "";
  background: #CD3B31;
  position: absolute;
  width: 3.3rem;
  height: 0.4rem;
  z-index: 2;
  top: 0;
  right: 0;
  transform: translate(0, 0);
}

.header__burger-btn::after {
  content: "";
  background: #CD3B31;
  position: absolute;
  width: 3.3rem;
  height: 0.4rem;
  z-index: 2;
  bottom: 0;
  right: 0;
  transform: translate(0, 0);
}

.header__burger-line {
  width: 1.8rem;
  height: 0.4rem;
  border-radius: 1.7rem;
  background: #CD3B31;
  position: absolute;
  z-index: 2;
  top: 50%;
  right: 0;
  transform: translate(0, -50%);
}

.header__lastmenu {
  position: inherit;
  padding-left: 0;
}

.header__menu-1 {
  display: none;
}

.header__menu-1-item {
  display: none;
}

[for=burger] {
  background: url("../img/burger.svg") no-repeat 0 0/cover;
  width: 3.8rem;
  height: 2.9rem;
  position: absolute;
  top: 2.8rem;
  right: 1.5rem;
  z-index: 2;
  padding: 0.25rem;
  background-position-x: 100%;
  cursor: pointer;
}

#burger:checked + label + .header__burger-menu {
  display: block;
}

#burger:checked + [for=burger] {
  background: url("../img/cross.svg") no-repeat 0 0/contain;
  background-position-x: right;
}

@media (max-width: 87.5em) {
  .header__allshops {
    padding-left: 3rem;
  }

  .header__doblemenu {
    grid-template: repeat(16, 1.7rem)/repeat(auto-fit, minmax(21rem, 1fr));
  }

  .header__doblemenu a {
    padding-right: 3rem;
  }

  .header__lastmenu {
    padding-left: 3rem;
  }
}

@media (max-width: 75em) {
  .header__allshops {
    width: 20rem !important;
  }

  .header__mainmenu {
    width: 9rem !important;
  }

  .header__lastmenu {
    width: 14rem !important;
    padding-left: 0;
    margin-left: -1rem !important;
  }
}

@media (max-width: 62em) {
  .header__allshops {
    width: auto !important;
    padding-left: 2rem;
  }

  .header__mainmenu {
    width: auto !important;
  }

  .header__lastmenu {
    width: auto !important;
    position: absolute;
    margin-left: auto !important;
    top: 58rem;
    right: 3.6rem;
    z-index: 1;
  }

  .header__cafe {
    margin-left: -0.01rem !important;
  }

  .header__nav {
    grid-template: 1fr 1fr/3fr 1fr 2fr;
    row-gap: 1rem;
  }

  .search-h {
    margin-left: auto;
    margin-right: 13rem;
    grid-column-start: 1;
    grid-column-end: 4;
  }
}

@media (max-width: 48em) {
  .header__nav {
    grid-template: 1fr 1fr/6fr 1fr 3.5fr;
    row-gap: 1rem;
  }

  .header__nav-item:first-child {
    padding-right: 0;
  }

  .header__mainmenu {
    border-right: 0;
  }

  .header__allshops {
    border-left: 0.2rem solid #C4C4C4;
    padding-left: 3rem;
    padding-bottom: 13.1rem;
  }

  .header__services {
    position: absolute;
    width: 18rem !important;
    top: 43rem;
    left: 41rem;
    z-index: 1;
  }

  .header__lastmenu {
    top: 86rem;
    left: 42.3rem;
  }

  .search-h {
    margin-right: 10rem;
  }
}

@media (max-width: 40em) {
  .container {
    width: 100% !important;
    margin: 0 !important;
    padding-right: 2rem !important;
    padding-left: 2rem !important;
  }

  .header__logo img {
    width: 6.9rem;
  }

  .header__nav {
    display: block;
  }

  .header__menu-1 {
    display: block;
    width: 100%;
    text-align: center;
  }

  .header__menu-1 a {
    margin-bottom: 4.8rem;
  }

  .header__menu-1-item {
    display: block;
    font-weight: 700;
    font-size: 2.4rem;
    line-height: 115%;
    font-family: "Calibri";
    color: var(--color-text);
    transition: color 0.2s ease-in-out;
  }

  .header__menu-1-item:hover {
    color: var(--color-accent);
    transition: color 0.2s ease-in-out;
  }

  .header__mainmenu {
    width: 100% !important;
    text-align: center;
  }

  .header__nav-item:first-child {
    padding-right: 7rem;
  }

  .header__nav-item:first-child span {
    display: none;
  }

  .header__nav-item:not(:first-child) {
    display: none;
  }

  .header__mainmenu {
    padding: 0 !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }

  .header__allshops {
    display: none;
  }

  .header__cafe {
    display: none;
  }

  .header__services {
    display: none;
  }

  .header__lastmenu {
    display: none;
  }

  [for=burger] {
    width: 3.3rem;
    height: 2.4rem;
    position: absolute;
    top: 2rem;
    right: 2rem;
    z-index: 2;
    padding: 0.25rem;
    background-image: url("../img/burger.svg");
    background-repeat: no-repeat;
    background-size: cover;
    background-position-x: 100%;
    cursor: pointer;
  }
}

@media (max-width: 36em) {
  .container {
    width: 100% !important;
    margin: 0 !important;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

@media (max-width: 20em) {
  .container {
    width: 100% !important;
    margin: 0 !important;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

.maintext {
  font: 400 1.4rem/115% "Calibri";
  color: var(--color-text);
}

.rent {
  padding-top: 12.9rem;
  margin-bottom: 8rem;
}

.rent__navigation {
  display: flex;
  margin-bottom: 2rem;
}

.rent__navigation-item {
  font: 400 1.4rem/115% "Calibri";
  color: var(--color-light-gray);
}

.rent__navigation-item--active {
  font: 400 1.4rem/115% "Calibri";
  color: var(--color-gray);
}

.rent__desc {
  margin-bottom: 3.4rem;
}

.rent__download {
  font: 400 2.4rem/115% "Calibri";
  display: block;
  width: max-content;
  color: var(--color-text);
  position: relative;
  margin-bottom: 6.7rem;
  transition: color 0.2s ease-in-out;
}

.rent__download:hover {
  color: var(--color-accent);
  transition: color 0.2s ease-in-out;
}

.rent__download::after {
  content: url(../img/download.svg);
  position: absolute;
  top: 0.4rem;
  right: -4rem;
  width: 3.2rem;
  height: 3.2rem;
  transition: content 0.2s ease-in-out;
}

.rent__ui {
  margin-bottom: 5.2rem;
}

.search-mob-h {
  display: none;
  position: relative;
  width: 100%;
  max-width: 26.8rem;
  height: 4rem;
  margin-bottom: 9.4rem;
}

.search-mob-h__input {
  font: 400 1.2rem/115% "Calibri";
  width: 100%;
  height: 100%;
  color: var(--color-text);
  border-radius: 8.8rem;
  background: #FFFFFF;
  padding-left: 1.6rem;
  padding-bottom: 0.3rem;
  box-shadow: 0.2rem 0.4rem 1.1rem 0 rgba(0, 0, 0, 0.17);
}

.search-mob-h__input-f {
  margin-bottom: 5.4rem;
}

.search-mob-h__btn {
  width: 1.5rem;
  height: 1.6rem;
  position: absolute;
  top: 1.3rem;
  right: 0.8rem;
  transform: translate(-50%, 0);
  z-index: 2;
  background: transparent;
  cursor: pointer;
}

.search-mob-h__input::placeholder {
  font: 400 1.2rem/115% "Calibri";
  color: var(--color-light-gray);
}

@media (max-width: 40em) {
  .search-mob-h {
    display: block;
    max-width: 100%;
    margin-top: 2.7rem;
  }
}

.search {
  position: relative;
  width: 100%;
  max-width: 26.8rem;
  height: 4rem;
}

.search__input {
  font: 400 1.2rem/115% "Calibri";
  width: 100%;
  height: 100%;
  color: var(--color-text);
  border-radius: 8.8rem;
  background: #FFFFFF;
  padding-left: 1.6rem;
  padding-bottom: 0.3rem;
  box-shadow: 0.2rem 0.4rem 1.1rem 0 rgba(0, 0, 0, 0.17);
}

.search__input-f {
  margin-bottom: 5.4rem;
}

.search__btn {
  width: 1.5rem;
  height: 1.6rem;
  position: absolute;
  top: 1.3rem;
  right: 0.8rem;
  transform: translate(-50%, 0);
  z-index: 2;
  background: transparent;
  cursor: pointer;
}

.search__input::placeholder {
  font: 400 1.2rem/115% "Calibri";
  color: var(--color-light-gray);
}

@media (max-width: 75em) {
  .search-f {
    position: absolute;
    top: 22rem;
    left: 0;
  }
}

@media (max-width: 62em) {
  .search__input-f {
    margin-bottom: 3.4rem;
  }

  .search-f {
    top: 15rem;
    left: 0;
  }
}

@media (max-width: 48em) {
  .search-f {
    top: 23rem;
    left: 16.3rem;
    width: 18rem !important;
  }
}

@media (max-width: 40em) {
  .search-h {
    display: none;
  }

  .search-f {
    position: relative;
    width: 95% !important;
    top: -15.2rem;
    left: 0;
  }
}

.slider {
  height: 19.2rem;
  overflow: hidden;
  position: relative;
}

.slider__wrap {
  width: 171.9rem;
  display: flex;
  align-items: center;
  margin-bottom: 2.6rem;
}

.slider__img {
  width: 30.7rem;
  height: 15.3rem;
  margin-right: 4.6rem;
  flex-shrink: 0;
  transition: all 0.6s ease-in-out;
}

.slider__img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.slider__nav {
  width: 4.7rem;
  height: 1rem;
  text-align: center;
  margin: 0 auto;
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translate(-50%, 0);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.slider__arrows {
  overflow: hidden;
  position: absolute;
  width: 100%;
  height: 3.6rem;
  position: absolute;
  bottom: 0.4rem;
  left: 0;
}

.slider__bullit {
  flex-shrink: 0;
  width: 0.6rem;
  height: 0.6rem;
  border-radius: 50%;
  background: #6B7073;
  opacity: 0.5;
  margin-top: 0.6rem;
  cursor: pointer;
}

.slider__bullit:hover {
  width: 0.9rem;
  height: 0.9rem;
  border-radius: 50%;
  background: #6B7073;
  transform: scale(1.1);
  opacity: 0.8;
}

.slider__bullit:active {
  width: 0.9rem;
  height: 0.9rem;
  border-radius: 50%;
  background: #6B7073;
  transform: scale(1.5);
  opacity: 1;
}

input[name=r] {
  position: absolute;
  visibility: hidden;
}

#r1:checked ~ .slider__arr {
  background: url("../img/arrow-sld.svg") no-repeat;
  float: left;
  display: block;
  height: 1.4rem;
  width: 4.1rem;
  margin-bottom: 0.1rem;
  cursor: pointer;
  margin-left: 0rem;
}

#r1:checked ~ #arrows label:nth-child(2),
#r2:checked ~ #arrows label:nth-child(3),
#r3:checked ~ #arrows label:nth-child(4),
#r4:checked ~ #arrows label:nth-child(5),
#r5:checked ~ #arrows label:nth-child(1) {
  background: url("../img/arrow-sld.svg") no-repeat;
  float: right;
  display: block;
  height: 1.4rem;
  width: 4.1rem;
  margin-bottom: 0.1rem;
  cursor: pointer;
  margin-right: 0rem;
}

#r1:checked ~ .s1 {
  margin-left: 0;
}

#r2:checked ~ .s1 {
  margin-left: -35.3rem;
}

#r3:checked ~ .s1 {
  margin-left: -70.6rem;
}

.socials {
  display: flex;
}

.socials__item {
  width: 3.7rem;
  height: 3.7rem;
  border-radius: 50%;
  background: #E4E4E4;
  display: grid;
  align-content: center;
  padding-left: 0.5rem;
  padding-right: 0.7rem;
  transition: color 0.2s ease-in-out;
}

.socials__item img {
  margin-top: 0.5rem;
  width: 95%;
  height: auto;
}

.socials__item img:first-child {
  width: 100%;
  margin-top: 0.1rem;
}

.socials__item:hover {
  background: #efefef;
  transition: color 0.2s ease-in-out;
}

.socials__item:first-child {
  margin-right: 2.2rem;
}

@media (max-width: 75em) {
  .socials {
    position: absolute;
    top: 0;
    left: 30rem;
  }
}

@media (max-width: 62em) {
  .socials {
    top: 6rem;
    left: 0;
  }
}

@media (max-width: 48em) {
  .socials {
    top: 0;
    left: 21rem;
  }
}

@media (max-width: 40em) {
  .socials {
    width: 12.4rem !important;
    top: 32rem;
    left: 50%;
    transform: translate(-48%, 0);
  }

  .socials__item {
    width: 4.7rem;
    height: 4.7rem;
  }

  .socials__item:first-child {
    margin-right: 3rem;
  }
}

.subtitle {
  font: 700 2.4rem/115% "Calibri";
  color: var(--color-text);
  margin-bottom: 3.4rem;
}

.title {
  font: 700 4.8rem/115% "Calibri";
  color: var(--color-text);
  margin-bottom: 2.4rem;
}

/**
  Нормализация блочной модели
 */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */

:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */

body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */

:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */

:where(ul[class]) {
  list-style: none;
}

/**
  Упрощаем работу с изображениями
 */

li {
  list-style: none;
  padding-left: 0;
}

a,
a:hover {
  text-decoration: none;
  cursor: pointer;
}

input,
button {
  border: none;
  outline: none;
  cursor: pointer;
}

img,
picture {
  width: 100%;
  height: auto;
  object-fit: contain;
}

html,
body {
  font: 10px/1.5 "Calibri", "Roboto", Arial, sans-serif;
}

:root {
  --color-accent: #CD3B31;
  --color-text: #151516;
  --color-gray: #6B7073;
  --color-light-gray: #C4C4C4;
}

.row {
  justify-content: center;
}

.container {
  position: relative;
}

/* $grid-breakpoints: (
    xs: 32em,
    sm: 57.6em,
    md: 76.8em,
    lg: 99.2em,
    xl: 120em,
    xxl: 140em) !default; */

/* $grid-breakpoints-min: (
    xs: 0,
    sm: 57.6rem,
    md: 76.8rem,
    lg: 99.2rem,
    xl: 120rem,
    xxl: 140rem) !default; */

.container {
  margin: 0 auto;
  max-width: 179rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

@media (max-width: 87.48em) {
  .container {
    max-width: 126rem;
  }
}

@media (max-width: 74.98em) {
  .container {
    max-width: 102rem;
  }
}

@media (max-width: 61.98em) {
  .container {
    max-width: 78rem;
  }
}

@media (max-width: 47.98em) {
  .container {
    max-width: 66rem;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.5rem;
  margin-right: -1.5rem;
}

.row > * {
  width: 100%;
  max-width: 100%;
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.col {
  flex: 1 0 0%;
}

.col-1 {
  flex: 0 0 auto;
  width: calc(8.3333333333% - 3rem);
}

.col-2 {
  flex: 0 0 auto;
  width: calc(16.6666666667% - 3rem);
}

.col-3 {
  flex: 0 0 auto;
  width: calc(25% - 3rem);
}

.col-4 {
  flex: 0 0 auto;
  width: calc(33.3333333333% - 3rem);
}

.col-5 {
  flex: 0 0 auto;
  width: calc(41.6666666667% - 3rem);
}

.col-6 {
  flex: 0 0 auto;
  width: calc(50% - 3rem);
}

.col-7 {
  flex: 0 0 auto;
  width: calc(58.3333333333% - 3rem);
}

.col-8 {
  flex: 0 0 auto;
  width: calc(66.6666666667% - 3rem);
}

.col-9 {
  flex: 0 0 auto;
  width: calc(75% - 3rem);
}

.col-10 {
  flex: 0 0 auto;
  width: calc(83.3333333333% - 3rem);
}

.col-11 {
  flex: 0 0 auto;
  width: calc(91.6666666667% - 3rem);
}

.col-12 {
  flex: 0 0 auto;
  width: calc(100% - 3rem);
}

@media (max-width: 87.5em) {
  .col-xxl-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 3rem);
  }

  .col-xxl-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 3rem);
  }

  .col-xxl-3 {
    flex: 0 0 auto;
    width: calc(25% - 3rem);
  }

  .col-xxl-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 3rem);
  }

  .col-xxl-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 3rem);
  }

  .col-xxl-6 {
    flex: 0 0 auto;
    width: calc(50% - 3rem);
  }

  .col-xxl-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 3rem);
  }

  .col-xxl-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 3rem);
  }

  .col-xxl-9 {
    flex: 0 0 auto;
    width: calc(75% - 3rem);
  }

  .col-xxl-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 3rem);
  }

  .col-xxl-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 3rem);
  }

  .col-xxl-12 {
    flex: 0 0 auto;
    width: calc(100% - 3rem);
  }
}

@media (max-width: 75em) {
  .col-xl-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 3rem);
  }

  .col-xl-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 3rem);
  }

  .col-xl-3 {
    flex: 0 0 auto;
    width: calc(25% - 3rem);
  }

  .col-xl-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 3rem);
  }

  .col-xl-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 3rem);
  }

  .col-xl-6 {
    flex: 0 0 auto;
    width: calc(50% - 3rem);
  }

  .col-xl-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 3rem);
  }

  .col-xl-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 3rem);
  }

  .col-xl-9 {
    flex: 0 0 auto;
    width: calc(75% - 3rem);
  }

  .col-xl-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 3rem);
  }

  .col-xl-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 3rem);
  }

  .col-xl-12 {
    flex: 0 0 auto;
    width: calc(100% - 3rem);
  }
}

@media (max-width: 62em) {
  .col-lg-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 3rem);
  }

  .col-lg-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 3rem);
  }

  .col-lg-3 {
    flex: 0 0 auto;
    width: calc(25% - 3rem);
  }

  .col-lg-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 3rem);
  }

  .col-lg-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 3rem);
  }

  .col-lg-6 {
    flex: 0 0 auto;
    width: calc(50% - 3rem);
  }

  .col-lg-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 3rem);
  }

  .col-lg-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 3rem);
  }

  .col-lg-9 {
    flex: 0 0 auto;
    width: calc(75% - 3rem);
  }

  .col-lg-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 3rem);
  }

  .col-lg-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 3rem);
  }

  .col-lg-12 {
    flex: 0 0 auto;
    width: calc(100% - 3rem);
  }
}

@media (max-width: 48em) {
  .col-md-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 3rem);
  }

  .col-md-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 3rem);
  }

  .col-md-3 {
    flex: 0 0 auto;
    width: calc(25% - 3rem);
  }

  .col-md-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 3rem);
  }

  .col-md-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 3rem);
  }

  .col-md-6 {
    flex: 0 0 auto;
    width: calc(50% - 3rem);
  }

  .col-md-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 3rem);
  }

  .col-md-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 3rem);
  }

  .col-md-9 {
    flex: 0 0 auto;
    width: calc(75% - 3rem);
  }

  .col-md-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 3rem);
  }

  .col-md-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 3rem);
  }

  .col-md-12 {
    flex: 0 0 auto;
    width: calc(100% - 3rem);
  }
}

@supports (-webkit-appearance:none) {
  [for=burger] {
    background-image: url("../img/burger.svg");
  }

  #burger:checked + [for=burger] {
    background-image: url("../img/cross.svg");
  }

  #r1:checked ~ .slider__arr {
    background: url("../img/arrow-sld.svg") no-repeat;
  }

  #r1:checked ~ #arrows label:nth-child(2),
  #r2:checked ~ #arrows label:nth-child(3),
  #r3:checked ~ #arrows label:nth-child(4),
  #r4:checked ~ #arrows label:nth-child(5),
  #r5:checked ~ #arrows label:nth-child(1) {
    background: url("../img/arrow-sld.svg") no-repeat;
  }
}

@media (max-width: 100em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 87.5em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 75em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 62em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 48em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 40em) {
@supports (-webkit-appearance:none) {
    [for=burger] {
      background-image: url("../img/burger.svg");
    }
}
}

@media (max-width: 36em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 20em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 87.48em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 74.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 61.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 47.98em) {
@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */